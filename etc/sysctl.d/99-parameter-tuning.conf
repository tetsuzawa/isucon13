# サーバーの受け入れ可能な接続要求のキューの最大長
# サーバーが接続要求を処理するより速く接続要求が到着する場合に役立ちます。
net.core.somaxconn = 65535

# インターフェースが受信するパケットの最大数。この限界を超えると、カーネルはパケットをドロップします。
# 高トラフィックの状況でのパケットロスを減少させるために使用。
net.core.netdev_max_backlog = 65536

# まだアクセプトされていないSYNリクエストの最大数
# SYNフラッド攻撃への耐性を高めるために使用します。
net.ipv4.tcp_max_syn_backlog = 65536

# 受信バッファの最大サイズを指定します。
# 大きなトラフィックを持つ接続においてデータの受信を最適化します。
net.core.rmem_max = 16777216

# 送信バッファの最大サイズを指定します。
# 送信データの遅延を減少させるために使用します。
net.core.wmem_max = 16777216

# TCP受信バッファの最小、デフォルト、最大の値を指定します。
net.ipv4.tcp_rmem = 4096 87380 16777216

# TCP送信バッファの最小、デフォルト、最大の値を指定します。
net.ipv4.tcp_wmem = 4096 65536 16777216

# TCP Fast Openを有効にします。これにより、接続のセットアップ時間が短縮されます。
net.ipv4.tcp_fastopen = 3

# アイドル状態のTCP接続が遅い開始を再開するかどうかを指定します。
# 継続的な高速接続を維持するために使用されます。
net.ipv4.tcp_slow_start_after_idle = 0

# TCPメトリクスの保存を無効にします。これは高速なサーバーでのリソースを節約するために使用されます。
net.ipv4.tcp_no_metrics_save = 1

# TCPの時間待ち状態のソケットの処理を安全にします。
# ネットワーク攻撃からの保護のために使用されます。
net.ipv4.tcp_rfc1337 = 1

# TIME-WAITソケットの再利用を許可します。これにより、リソースを効率的に使用できます。
net.ipv4.tcp_tw_reuse = 1

# TCP接続が完全に終了するまでの時間を指定します。
# リソースを迅速に解放するために使用されます。
net.ipv4.tcp_fin_timeout = 10

# TCPタイムスタンプを有効にします。これは、TCPの性能を最適化するために使用されます。
# ただし、一部の状況ではセキュリティ上の懸念があります。状況に応じて慎重に使用する必要があります。
net.ipv4.tcp_timestamps = 1

# TCPキープアライブタイムアウトを指定します。これにより、不要な接続が迅速に終了します。
net.ipv4.tcp_keepalive_time = 10

# 無応答の接続を切断する前に送信されるキープアライブプローブの数を指定します。
net.ipv4.tcp_keepalive_probes = 3

# 連続したキープアライブプローブの間隔を指定します。
net.ipv4.tcp_keepalive_intvl = 3

# 使用可能なローカルポートの範囲を指定します。これにより、高い同時接続数をサポートします。
net.ipv4.ip_local_port_range = 1024 65535
